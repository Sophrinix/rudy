= RuDy 

An effort / library / gem ? to enable and ease writing Ruby native extensions in D programming language.

== Why?
Because even native extensions should be written in a modern and pro-productive language. While still being close-to-the-metal and C-fast.

== Elements

Currently contains:
* bcd - ruby.d converted from ruby.h using bcd.gen
* rudy - current state of the library that's beyond the bindings
* dexter - a playground application for testing and experimenting with (now) binding and (later) library

See README files in each of the subdirs for explanation and further info.

== Current state

Bindings (bcd.ruby) working as far as current Dexter functionality and its test coverage is concerned.

Early state of RudyObject -- a class for references to Ruby objects (VALUEs) that wraps, convers and exposes these to D as D's native types.

to_ruby_value -- a function doing the opposite, i.e. returning Ruby VALUEs from native D types (some D reflection goodness here); needs a bit of non-critical work (wrapping functions/delegates etc.)

def! macro for automatically registering D methods into Ruby -- working with some cool features, but still lacks auto-wrapping/unwrapping passed arguments and return value

dexter_rubyd.d and associated files removed - this stuff isn't working for me (segfaulting at runtime/require time), so they're git-rm'ed.

== Getting Started (with your own code)

Check out dexter directory, namely files dexter.d (using Rudy), dexter_tester.rb (unittests for what's implemented in dexter.d) and compile (how to compile the stuff as for now).

== Plans and aims

1. Generate complete and working .d files (based on ruby.h) for writing Ruby extensions in D.
2. Extend extconf.rb to recognize and generate makefiles (maybe also dsss config files) for extensions written in D.
3. Create PyD (http://pyd.dsource.org/) equivalent for Ruby:
* RudyObject
* to_ruby_value
* def!(function)
* def!(class)

== Licensing

The whole RuDy project is licensed under GNU LGPL (http://www.gnu.org/licenses/lgpl.html).

== Authors:
* Tomasz Stachewicz - developer
* Kirk McDonald - lots of help and advice on D and interaction with Ruby, original author of PyD (http://pyd.dsource.org/)
* Ray C. Horn (from http://www.pypi.info/) and "cpunion" (author of http://code.google.com/p/rubyd/) - inspiration

== Post Scriptum
Cpunion! If you're reading this, please contact me (Tomasz Stachewicz) on email tomekrs@o2.pl. I belive I stumbled upon your blog, but in... Chinese, and while learned Mandarin a bit, I couldn't figure out a way to contact you.
